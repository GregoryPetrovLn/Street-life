{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nfunction lazyWithPreload(factory) {\n  var LazyComponent = react_1.lazy(factory);\n  var factoryPromise;\n  var LoadedComponent;\n\n  var Component = function (props) {\n    return react_1.createElement(LoadedComponent !== null && LoadedComponent !== void 0 ? LoadedComponent : LazyComponent, props);\n  };\n\n  Component.preload = function () {\n    if (!factoryPromise) {\n      factoryPromise = factory().then(function (module) {\n        LoadedComponent = module.default;\n      });\n    }\n\n    return factoryPromise;\n  };\n\n  return Component;\n}\n\nexports.default = lazyWithPreload;","map":{"version":3,"sources":["/Users/gregorypetrov/Documents/WebStorm/MyWebApplication/node_modules/react-lazy-with-preload/lib/index.js"],"names":["Object","defineProperty","exports","value","react_1","require","lazyWithPreload","factory","LazyComponent","lazy","factoryPromise","LoadedComponent","Component","props","createElement","preload","then","module","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAC9B,MAAIC,aAAa,GAAGJ,OAAO,CAACK,IAAR,CAAaF,OAAb,CAApB;AACA,MAAIG,cAAJ;AACA,MAAIC,eAAJ;;AACA,MAAIC,SAAS,GAAI,UAAUC,KAAV,EAAiB;AAC9B,WAAOT,OAAO,CAACU,aAAR,CAAuBH,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyDA,eAAzD,GAA2EH,aAAlG,EAAkHK,KAAlH,CAAP;AACH,GAFD;;AAGAD,EAAAA,SAAS,CAACG,OAAV,GAAoB,YAAY;AAC5B,QAAI,CAACL,cAAL,EAAqB;AACjBA,MAAAA,cAAc,GAAGH,OAAO,GAAGS,IAAV,CAAe,UAAUC,MAAV,EAAkB;AAC9CN,QAAAA,eAAe,GAAGM,MAAM,CAACC,OAAzB;AACH,OAFgB,CAAjB;AAGH;;AACD,WAAOR,cAAP;AACH,GAPD;;AAQA,SAAOE,SAAP;AACH;;AACDV,OAAO,CAACgB,OAAR,GAAkBZ,eAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nfunction lazyWithPreload(factory) {\n    var LazyComponent = react_1.lazy(factory);\n    var factoryPromise;\n    var LoadedComponent;\n    var Component = (function (props) {\n        return react_1.createElement((LoadedComponent !== null && LoadedComponent !== void 0 ? LoadedComponent : LazyComponent), props);\n    });\n    Component.preload = function () {\n        if (!factoryPromise) {\n            factoryPromise = factory().then(function (module) {\n                LoadedComponent = module.default;\n            });\n        }\n        return factoryPromise;\n    };\n    return Component;\n}\nexports.default = lazyWithPreload;\n"]},"metadata":{},"sourceType":"script"}